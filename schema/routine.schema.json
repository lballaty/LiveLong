{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/schema/routine.schema.json",
  "title": "LiveLong Routine Schema",
  "type": "object",
  "additionalProperties": false,
  "required": ["spec_version", "routine_id", "title", "exercises"],
  "properties": {
    "spec_version": { "type": "integer", "minimum": 1 },
    "routine_id": { "type": "string", "minLength": 1 },
    "title": { "type": "string", "minLength": 1 },
    "exercises": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["id", "name", "type", "cues"],
        "properties": {
          "id": { "type": "string", "pattern": "^[a-z0-9_\-]+$" },
          "name": { "type": "string", "minLength": 1 },
          "type": { "enum": ["time", "reps"] },
          "duration_sec": { "type": "integer", "minimum": 0 },
          "target_reps": { "type": "integer", "minimum": 1 },
          "cues": {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 1 }
          },
          "pacer": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": { "type": "string", "enum": ["breath", "cycle", "preset"] },
              "inhale_sec": { "type": "integer", "minimum": 1 },
              "exhale_sec": { "type": "integer", "minimum": 1 },
              "hold1_sec": { "type": "integer", "minimum": 0 },
              "hold2_sec": { "type": "integer", "minimum": 0 },
              "style": { "type": "string", "enum": ["circle", "wave", "image", "box", "triangle"] },
              "image": { "type": "string" },
              "preset_id": { "type": "string" }
            },
            "allOf": [
              { "if": { "properties": { "type": { "const": "preset" } } }, "then": { "required": ["preset_id"] } },
              { "if": { "properties": { "type": { "const": "cycle" } } }, "then": { "required": ["inhale_sec", "exhale_sec"] } },
              { "if": { "properties": { "style": { "const": "box" } } }, "then": { "required": ["hold1_sec", "hold2_sec"] } }
            ]
          },
          "pacer": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": { "type": "string", "enum": ["breath", "cycle", "preset"] },
              "inhale_sec": { "type": "integer", "minimum": 1 },
              "exhale_sec": { "type": "integer", "minimum": 1 },
              "hold1_sec": { "type": "integer", "minimum": 0 },
              "hold2_sec": { "type": "integer", "minimum": 0 },
              "style": { "type": "string", "enum": ["circle", "wave", "image", "box", "triangle"] },
              "image": { "type": "string" },
              "preset_id": { "type": "string" }
            },
            "allOf": [
              { "if": { "properties": { "type": { "const": "preset" } } }, "then": { "required": ["preset_id"] } },
              { "if": { "properties": { "type": { "const": "cycle" } } }, "then": { "required": ["inhale_sec", "exhale_sec"] } },
              { "if": { "properties": { "style": { "const": "box" } } }, "then": { "required": ["hold1_sec", "hold2_sec"] } }
            ]
          },
          "media": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "images": {
                "type": "array",
                "items": { "type": "string", "minLength": 1 }
              },
              "video": {
                "type": "object",
                "additionalProperties": false,
                "required": ["src"],
                "properties": {
                  "src": { "type": "string", "minLength": 1 },
                  "poster": { "type": "string" }
                }
              }
            }
          }
        },
        "allOf": [
          {
            "if": { "properties": { "type": { "const": "time" } } },
            "then": { "required": ["duration_sec"] }
          },
          {
            "if": { "properties": { "type": { "const": "reps" } } },
            "then": { "required": ["target_reps"] }
          }
        ]
      }
    }
  }
}
